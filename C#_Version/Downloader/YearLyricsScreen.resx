<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>